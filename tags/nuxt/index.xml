<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nuxt on KwanDev</title><link>https://kwandev.github.io/tags/nuxt/</link><description>Recent content in Nuxt on KwanDev</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Sun, 31 May 2020 23:11:11 +0000</lastBuildDate><atom:link href="https://kwandev.github.io/tags/nuxt/index.xml" rel="self" type="application/rss+xml"/><item><title>Nuxt에서 svg-sprite-loader 사용하기</title><link>https://kwandev.github.io/post/vue/2020-05-31-nuxt-svg-loader/</link><pubDate>Sun, 31 May 2020 23:11:11 +0000</pubDate><guid>https://kwandev.github.io/post/vue/2020-05-31-nuxt-svg-loader/</guid><description>최근 회사에서 Nuxt를 사용할 일이 있었는데, Nuxt에 기본 내장된 loader가 아닌 다른 loader를 선택해서 사용할때 겪었던 문제를 기록해두려한다.
문제 create-nuxt-app을 이용해서 앱을 만들면 내장된 url-loader에 svg loader가 내장되어있다. 새로운 svg loader를 추가하면 기존 loader와 충돌해서 작동하지 않는다. 해결 기존 loader를 제거하고 새로운 loader를 추가하자 nuxt.config.js Nuxt의 설정파일에서 아래와 같이 설정해 주면 된다. 코드는 어렵지 않기 때문에 보면서 이해할 수 있을 것 같다.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 build: { extend (config, ctx) { // svg를 사용중인 loader를 찾고 삭제 const rule = config.</description></item><item><title>Nuxt로 알아보는 SPA, SSR 그리고 Static Web</title><link>https://kwandev.github.io/post/vue/2020-03-02-nuxt-spa-ssr/</link><pubDate>Mon, 02 Mar 2020 13:51:20 +0000</pubDate><guid>https://kwandev.github.io/post/vue/2020-03-02-nuxt-spa-ssr/</guid><description>😨 그동안의 오해 나는 그동안 Nuxt를 제대로 알고 있다고 생각했다. 흔히 말하는 SPA의 특징과 SSR의 특징을 이해하고 있다고 믿었고, 서비스의 특징과 필요에 따라 사용하면 된다고 알고 있었다. 그러나 사이드 프로젝트를 진행하면서 의문이 들어 나름의 조사를 해보니 SPA와 SSR의 큰 특징들만 알고 있었지, Nuxt를 제대로 아는 것이 아니었더라. SPA, SSR 그리고 Static Web의 차이를 제대로 알고 쓰도록 하자.
📱 SPA? 단일 페이지 애플리케이션(Single Page Application, SPA) SPA란 단일 페이지로 구성된 웹앱을 말한다.</description></item></channel></rss>